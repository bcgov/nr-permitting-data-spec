{
	"info": {
		"_postman_id": "6992ed43-4e0f-4123-a497-21f87c1c9a4e",
		"name": "Common Object Management Service (COMS)",
		"description": "A microservice for managing access control to S3 Objects\n\nContact Support:\n Name: NR Common Service Showcase\n Email: NR.CommonServiceShowcase@gov.bc.ca",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9713658"
	},
	"item": [
		{
			"name": "Object",
			"item": [
				{
					"name": "Creates new objects",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "An arbitrary metadata key/value pair. Must contain the x-amz-meta- prefix to be valid. Multiple metadata pairs can be defined. keys must be unique and will be converted to lowercase.",
								"key": "x-amz-meta-*",
								"value": "ad consequat ea labore amet"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "anyKey",
									"description": "This endpoint can accept an arbitrary number of form-data keys. There must be at least one key present, and every key must be unique. All keys shall contain a binary representation of the file to upload. In the response, each successfully uploaded file shall contain a 'fieldName' property corresponding to your custom defined keys.",
									"type": "file",
									"src": ""
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/object?tagset[x]=a",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object"
							],
							"query": [
								{
									"key": "tagset[x]",
									"value": "a",
									"description": "Tags for the object, defined as a Key/Value tag. The query must be formatted in deepObject style notation, where a tag-set made out of multiple tags would be encoded something similar to `tagset[x]=a&tagset[y]=b`. Only one value can exist for a given tag key."
								},
								{
									"key": "tagset[y]",
									"value": "b",
									"description": "Tags for the object, defined as a Key/Value tag. The query must be formatted in deepObject style notation, where a tag-set made out of multiple tags would be encoded something similar to `tagset[x]=a&tagset[y]=b`. Only one value can exist for a given tag key.",
									"disabled": true
								}
							]
						},
						"description": "Create object(s) in the configured object storage. If COMS is running in either 'OIDC' or 'Full' mode, any objects created with OIDC user authentication will have all object permissions assigned to them by default."
					},
					"response": [
						{
							"name": "Returns an array of created object data",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									},
									{
										"description": "An arbitrary metadata key/value pair. Must contain the x-amz-meta- prefix to be valid. Multiple metadata pairs can be defined. keys must be unique and will be converted to lowercase.",
										"key": "x-amz-meta-*",
										"value": "ad consequat ea labore amet"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "anyKey",
											"description": "This endpoint can accept an arbitrary number of form-data keys. There must be at least one key present, and every key must be unique. All keys shall contain a binary representation of the file to upload. In the response, each successfully uploaded file shall contain a 'fieldName' property corresponding to your custom defined keys.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/object?tagset[x]=a&tagset[y]=b",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object"
									],
									"query": [
										{
											"key": "tagset[x]",
											"value": "a"
										},
										{
											"key": "tagset[y]",
											"value": "b"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n    {\n    \"$metadata\": {\n      \"httpStatusCode\": 200,\n      \"extendedRequestId\": \"a0ec1be0a99a08aee6026ba9756da40327f2d3ce844499b7ee752082f3fb22e3\",\n      \"attempts\": 1,\n      \"totalRetryDelay\": 0\n    },\n    \"ETag\": \"\\\"9d1aaa54b84e1d6ccc6e0477c5717fe3\\\"\",\n    \"active\": true,\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"fieldName\": \"file1\",\n    \"id\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"metadata\": {\n      \"name\": \"report.xls\",\n      \"department\": \"finance\"\n    },\n    \"path\": \"coms/env/ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"public\": false,\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"tags\": {\n      \"classification\": \"Top Secret\",\n      \"Priority\": \"Urgent\"\n    },\n    \"VersionId\": \"234454324\"\n  }\n]"
						}
					]
				},
				{
					"name": "Search for objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "An arbitrary metadata key/value pair. Must contain the x-amz-meta- prefix to be valid. Multiple metadata pairs can be defined. keys must be unique and will be converted to lowercase.",
								"key": "x-amz-meta-*",
								"value": "ad consequat ea labore amet",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/object",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object"
							],
							"query": [
								{
									"key": "objId",
									"value": "ac246e31-c807-496c-bc93-cd8bc2f1b2b4",
									"description": "Uuid or array of uuids representing the object",
									"disabled": true
								},
								{
									"key": "path",
									"value": "coms/env/ac246e31-c807-496c-bc93-cd8bc2f1b2b4",
									"description": "The canonical S3 path string of the object",
									"disabled": true
								},
								{
									"key": "active",
									"value": "true",
									"description": "Boolean on active status",
									"disabled": true
								},
								{
									"key": "public",
									"value": "true",
									"description": "Boolean on public status",
									"disabled": true
								},
								{
									"key": "mimeType",
									"value": "application/octet-stream",
									"description": "The object MIME Type",
									"disabled": true
								},
								{
									"key": "name",
									"value": "foobar.txt",
									"description": "the `name` metadata for the object Typically a descriptive title or original filename",
									"disabled": true
								},
								{
									"key": "tagset[x]",
									"value": "a",
									"description": "Tags for the object, defined as a Key/Value tag. The query must be formatted in deepObject style notation, where a tag-set made out of multiple tags would be encoded something similar to `tagset[x]=a&tagset[y]=b`. Only one value can exist for a given tag key.",
									"disabled": true
								}
							]
						},
						"description": "Returns a list of objects matching all search criteria across all known versions of objects. If the request is BasicAuth authenticated, all search and filtered results will appear. However, If the request is BearerAuth authenticated, only objects that the user has at least one permission associated with, will appear in addition to their filtering parameters."
					},
					"response": [
						{
							"name": "Returns and array of objects",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									},
									{
										"description": "An arbitrary metadata key/value pair. Must contain the x-amz-meta- prefix to be valid. Multiple metadata pairs can be defined. keys must be unique and will be converted to lowercase.",
										"key": "x-amz-meta-*",
										"value": "ad consequat ea labore amet"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object?objId=ac246e31-c807-496c-bc93-cd8bc2f1b2b4&path=coms/env/ac246e31-c807-496c-bc93-cd8bc2f1b2b4&active=true&public=true&mimeType=application/octet-stream&name=foobar.txt&tagset[x]=a&tagset[y]=b",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object"
									],
									"query": [
										{
											"key": "objId",
											"value": "ac246e31-c807-496c-bc93-cd8bc2f1b2b4"
										},
										{
											"key": "path",
											"value": "coms/env/ac246e31-c807-496c-bc93-cd8bc2f1b2b4"
										},
										{
											"key": "active",
											"value": "true"
										},
										{
											"key": "public",
											"value": "true"
										},
										{
											"key": "mimeType",
											"value": "application/octet-stream"
										},
										{
											"key": "name",
											"value": "foobar.txt"
										},
										{
											"key": "tagset[x]",
											"value": "a"
										},
										{
											"key": "tagset[y]",
											"value": "b"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"active\": true,\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"id\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"path\": \"coms/env/ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"public\": false,\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\"\n  },\n  {\n    \"active\": true,\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"id\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"path\": \"coms/env/ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"public\": false,\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\"\n  }\n]"
						}
					]
				},
				{
					"name": "Returns object headers",
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/object/:objId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object",
								":objId"
							],
							"query": [
								{
									"key": "versionId",
									"value": "1647462569641",
									"description": "Request a specified version",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Returns S3 and COMS headers for a specific object"
					},
					"response": [
						{
							"name": "Returns object headers",
							"originalRequest": {
								"method": "HEAD",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object/:objId?versionId=1647462569641",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId"
									],
									"query": [
										{
											"key": "versionId",
											"value": "1647462569641"
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Disposition",
									"value": "attachment; filename=\"foobar.txt\"",
									"description": "Specifies presentational information for the object"
								},
								{
									"key": "Content-Length",
									"value": "529",
									"description": "Size of the body in bytes"
								},
								{
									"key": "ETag",
									"value": "91955226",
									"description": "An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL"
								},
								{
									"key": "Last-Modified",
									"value": "1969-04-19T13:13:43.693Z",
									"description": "Creation date of the object"
								},
								{
									"key": "x-amz-server-side-encryption",
									"value": "AES256",
									"description": "If the object is stored using server-side encryption either with an AWS KMS key or an Amazon S3-managed encryption key, the response includes this header with the value of the server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms)."
								},
								{
									"key": "x-amz-version-id",
									"value": "1647462569641",
									"description": "Version of the object"
								},
								{
									"key": "x-amz-meta-id",
									"value": "ac246e31-c807-496c-bc93-cd8bc2f1b2b4",
									"description": "The Object ID"
								},
								{
									"key": "x-amz-meta-name",
									"value": "foobar.txt",
									"description": "The original filename of the object"
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/object/:objId?download=proxy&expiresIn=300&versionId=1647462569641",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object",
								":objId"
							],
							"query": [
								{
									"key": "download",
									"value": "proxy",
									"description": "Download mode behavior. Default behavior (undefined) will yield an HTTP 302 redirect to the S3 bucket via presigned URL. If `proxy` is specified, the object contents will be available proxied through COMS. If `url` is specified, expect an HTTP 201 cotaining the presigned URL as a JSON string in the response."
								},
								{
									"key": "expiresIn",
									"value": "300",
									"description": "How many seconds the pre-signed URL should remain valid for"
								},
								{
									"key": "versionId",
									"value": "1647462569641",
									"description": "Request a specified version"
								}
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Returns the object as either a direct binary stream, an HTTP 201 containing a direct, temporary pre-signed S3 object URL location, or an HTTP 302 redirect to a direct, temporary pre-signed S3 object URL location."
					},
					"response": [
						{
							"name": "Returns the object",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object/:objId?download=proxy&expiresIn=300&versionId=1647462569641",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId"
									],
									"query": [
										{
											"key": "download",
											"value": "proxy"
										},
										{
											"key": "expiresIn",
											"value": "300"
										},
										{
											"key": "versionId",
											"value": "1647462569641"
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Disposition",
									"value": "attachment; filename=\"foobar.txt\"",
									"description": "Specifies presentational information for the object"
								},
								{
									"key": "Content-Length",
									"value": "529",
									"description": "Size of the body in bytes"
								},
								{
									"key": "ETag",
									"value": "91955226",
									"description": "An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL"
								},
								{
									"key": "Last-Modified",
									"value": "1969-04-19T13:13:43.693Z",
									"description": "Creation date of the object"
								},
								{
									"key": "x-amz-server-side-encryption",
									"value": "AES256",
									"description": "If the object is stored using server-side encryption either with an AWS KMS key or an Amazon S3-managed encryption key, the response includes this header with the value of the server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms)."
								},
								{
									"key": "x-amz-version-id",
									"value": "et Ut exercitation",
									"description": "Version of the object"
								},
								{
									"key": "x-amz-meta-id",
									"value": "ac246e31-c807-496c-bc93-cd8bc2f1b2b4",
									"description": "The Object ID"
								},
								{
									"key": "x-amz-meta-name",
									"value": "foobar.txt",
									"description": "The original filename of the object"
								},
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								}
							],
							"cookie": [],
							"body": "esse quis fugiat consequat"
						},
						{
							"name": "Returns a Presigned S3 URL",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object/:objId?download=proxy&expiresIn=300&versionId=1647462569641",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId"
									],
									"query": [
										{
											"key": "download",
											"value": "proxy"
										},
										{
											"key": "expiresIn",
											"value": "300"
										},
										{
											"key": "versionId",
											"value": "1647462569641"
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"https://your.objectstore.com/yourbucket/coms/env/00000000-0000-0000-0000-000000000000?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=credential%2F20220411%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220411T204528Z&X-Amz-Expires=300&X-Amz-Signature=SIGNATURE&X-Amz-SignedHeaders=host&x-id=GetObject\""
						},
						{
							"name": "Returns a temporary pre-signed S3 object URL location header",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object/:objId?download=proxy&expiresIn=300&versionId=1647462569641",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId"
									],
									"query": [
										{
											"key": "download",
											"value": "proxy"
										},
										{
											"key": "expiresIn",
											"value": "300"
										},
										{
											"key": "versionId",
											"value": "1647462569641"
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "https://your.objectstore.com/yourbucket/coms/env/00000000-0000-0000-0000-000000000000?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=credential%2F20220411%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220411T204528Z&X-Amz-Expires=300&X-Amz-Signature=SIGNATURE&X-Amz-SignedHeaders=host&x-id=GetObject",
									"description": "URL Location of the moved resource"
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Updates an Object",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "An arbitrary metadata key/value pair. Must contain the x-amz-meta- prefix to be valid. Multiple metadata pairs can be defined. keys must be unique and will be converted to lowercase.",
								"key": "x-amz-meta-*",
								"value": "ad consequat ea labore amet"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "anyKey",
									"description": "This endpoint will accept only one arbitrary form-data key. That key shall contain a binary representation of the file to upload. In the response, the successfully uploaded file shall contain a 'fieldName' property corresponding to your custom defined key.",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/object/:objId?tagset[x]=a&tagset[y]=b",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object",
								":objId"
							],
							"query": [
								{
									"key": "tagset[x]",
									"value": "a",
									"description": "Tags for the object, defined as a Key/Value tag. The query must be formatted in deepObject style notation, where a tag-set made out of multiple tags would be encoded something similar to `tagset[x]=a&tagset[y]=b`. Only one value can exist for a given tag key."
								},
								{
									"key": "tagset[y]",
									"value": "b",
									"description": "Tags for the object, defined as a Key/Value tag. The query must be formatted in deepObject style notation, where a tag-set made out of multiple tags would be encoded something similar to `tagset[x]=a&tagset[y]=b`. Only one value can exist for a given tag key."
								}
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Updates the object in the configured object storage. If the object storage supports versioning, a new version will be generated instead of overwriting the existing contents."
					},
					"response": [
						{
							"name": "Returns the updated object data",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									},
									{
										"description": "An arbitrary metadata key/value pair. Must contain the x-amz-meta- prefix to be valid. Multiple metadata pairs can be defined. keys must be unique and will be converted to lowercase.",
										"key": "x-amz-meta-*",
										"value": "ad consequat ea labore amet"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "anyKey",
											"description": "This endpoint will accept only one arbitrary form-data key. That key shall contain a binary representation of the file to upload. In the response, the successfully uploaded file shall contain a 'fieldName' property corresponding to your custom defined key.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/object/:objId?tagset[x]=a&tagset[y]=b",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId"
									],
									"query": [
										{
											"key": "tagset[x]",
											"value": "a"
										},
										{
											"key": "tagset[y]",
											"value": "b"
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"$metadata\": {\n    \"httpStatusCode\": 200,\n    \"extendedRequestId\": \"a0ec1be0a99a08aee6026ba9756da40327f2d3ce844499b7ee752082f3fb22e3\",\n    \"attempts\": 1,\n    \"totalRetryDelay\": 0\n  },\n  \"ETag\": \"\\\"9d1aaa54b84e1d6ccc6e0477c5717fe3\\\"\",\n  \"active\": true,\n  \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n  \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n  \"fieldName\": \"file1\",\n  \"id\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n  \"metadata\": {\n    \"name\": \"report.xls\",\n    \"department\": \"finance\"\n  },\n  \"path\": \"coms/env/ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n  \"public\": false,\n  \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n  \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n  \"tags\": {\n    \"classification\": \"Top Secret\",\n    \"Priority\": \"Urgent\"\n  },\n  \"ServerSideEncryption\": \"AES256\",\n  \"VersionId\": \"minim veniam Excepteur dolor\"\n}"
						}
					]
				},
				{
					"name": "Deletes an object or a version of object",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/object/:objId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object",
								":objId"
							],
							"query": [
								{
									"key": "versionId",
									"value": "1647462569641",
									"description": "delete a specified version. If not provided a delete-marker will be created (see S3 documentation)",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Deletes the specified object (or version) from S3. If the object storage supports versioning, precise S3 version stack manipulation is supported, including soft-deletion and soft-restore. Hard-deletions on S3 are also supported. For more details on general S3 version behavior, visit https://docs.aws.amazon.com/AmazonS3/latest/userguide/DeletingObjectVersions.html"
					},
					"response": [
						{
							"name": "Object or version was deleted from object storage and COMS database",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object/:objId?versionId=1647462569641",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId"
									],
									"query": [
										{
											"key": "versionId",
											"value": "1647462569641"
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"$metadata\": {\n    \"httpStatusCode\": 200,\n    \"extendedRequestId\": \"a0ec1be0a99a08aee6026ba9756da40327f2d3ce844499b7ee752082f3fb22e3\",\n    \"attempts\": 1,\n    \"totalRetryDelay\": 0\n  },\n  \"DeleteMarker\": false,\n  \"VersionId\": 1647462569641\n}"
						}
					]
				},
				{
					"name": "Returns the object version history",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/object/:objId/versions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object",
								":objId",
								"versions"
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Returns an array of an object's version history"
					},
					"response": [
						{
							"name": "Returns an array of versions for a specific object",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object/:objId/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId",
										"versions"
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"$metadata\": {\n    \"httpStatusCode\": 200,\n    \"extendedRequestId\": \"a0ec1be0a99a08aee6026ba9756da40327f2d3ce844499b7ee752082f3fb22e3\",\n    \"attempts\": 1,\n    \"totalRetryDelay\": 0\n  },\n  \"IsTruncated\": false,\n  \"MaxKeys\": 1000,\n  \"Name\": \"do sit\",\n  \"Prefix\": \"coms/env/ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n  \"Versions\": [\n    {\n      \"ETag\": \"9d1aaa54b84e1d6ccc6e0477c5717fe3\",\n      \"Size\": 529,\n      \"StorageClass\": {},\n      \"VersionId\": \"consectetur Ut sed\",\n      \"IsLatest\": {},\n      \"LastModified\": \"2022-03-11T23:19:16.343Z\",\n      \"key\": {},\n      \"Owner\": {\n        \"DisplayName\": \"abcdef\",\n        \"ID\": \"abcdef\"\n      }\n    },\n    {\n      \"ETag\": \"9d1aaa54b84e1d6ccc6e0477c5717fe3\",\n      \"Size\": 529,\n      \"StorageClass\": {},\n      \"VersionId\": \"amet ea minim\",\n      \"IsLatest\": {},\n      \"LastModified\": \"2022-03-11T23:19:16.343Z\",\n      \"key\": {},\n      \"Owner\": {\n        \"DisplayName\": \"abcdef\",\n        \"ID\": \"abcdef\"\n      }\n    }\n  ],\n  \"KeyMarker\": \"\",\n  \"VersionIdMarker\": \"\"\n}"
						}
					]
				},
				{
					"name": "Sets the public flag of an object",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/object/:objId/public?public=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object",
								":objId",
								"public"
							],
							"query": [
								{
									"key": "public",
									"value": "true",
									"description": "Boolean on public status"
								}
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Toggles the public property for an object. Sets public to false if public query parameter is not specified."
					},
					"response": [
						{
							"name": "Returns the object information",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object/:objId/public?public=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId",
										"public"
									],
									"query": [
										{
											"key": "public",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"active\": true,\n  \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n  \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n  \"id\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n  \"path\": \"coms/env/ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n  \"public\": false,\n  \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n  \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\"\n}"
						}
					]
				}
			],
			"description": "Operations directly influencing an S3 Object. Certain operations not available without a database."
		},
		{
			"name": "Object Metadata",
			"item": [
				{
					"name": "Adds metadata to an object",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"description": "An arbitrary metadata key/value pair. Must contain the x-amz-meta- prefix to be valid. Multiple metadata pairs can be defined. keys must be unique and will be converted to lowercase.",
								"key": "x-amz-meta-*",
								"value": "ad consequat ea labore amet"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/object/:objId/metadata",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object",
								":objId",
								"metadata"
							],
							"query": [
								{
									"key": "versionId",
									"value": "1647462569641",
									"description": "Add to metadata that exists on a specific version.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Creates a copy and new version of the object with the given metadata added to the object. Multiple Key/Value pairs can be provided in the header for the metadata."
					},
					"response": [
						{
							"name": "The operation completed successfully.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic / Bearer <credentials>"
									},
									{
										"description": "An arbitrary metadata key/value pair. Must contain the x-amz-meta- prefix to be valid. Multiple metadata pairs can be defined. keys must be unique and will be converted to lowercase.",
										"key": "x-amz-meta-x",
										"value": "y"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object/:objId/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId",
										"metadata"
									],
									"query": [
										{
											"key": "versionId",
											"value": "1647462569641",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Replaces metadata of an object",
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "An arbitrary metadata key/value pair. Must contain the x-amz-meta- prefix to be valid. Multiple metadata pairs can be defined. keys must be unique and will be converted to lowercase.",
								"key": "x-amz-meta-*",
								"value": "ad consequat ea labore amet"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/object/:objId/metadata",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object",
								":objId",
								"metadata"
							],
							"query": [
								{
									"key": "versionId",
									"value": "1647462569641",
									"description": "replace metadata from a specified version",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Creates a copy and new version of the object with the given metadata replacing the existing. Multiple Key/Value pairs can be provided in the header for the metadata."
					},
					"response": [
						{
							"name": "The resource was added successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									},
									{
										"description": "An arbitrary metadata key/value pair. Must contain the x-amz-meta- prefix to be valid. Multiple metadata pairs can be defined. keys must be unique and will be converted to lowercase.",
										"key": "x-amz-meta-*",
										"value": "ad consequat ea labore amet"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object/:objId/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId",
										"metadata"
									],
									"query": [
										{
											"key": "versionId",
											"value": "1647462569641",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete metadata of an object.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "An arbitrary metadata key/value pair. Must contain the x-amz-meta- prefix to be valid. Multiple metadata pairs can be defined. keys must be unique and will be converted to lowercase.",
								"key": "x-amz-meta-*",
								"value": "ad consequat ea labore amet"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/object/:objId/metadata?versionId=1647462569641",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object",
								":objId",
								"metadata"
							],
							"query": [
								{
									"key": "versionId",
									"value": "1647462569641",
									"description": "Request a specified version"
								}
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Creates a copy and new version of the object with the given metadata removed. Multiple Key/Value pairs can be provided in the header for the metadata. If no metadata headers are given then all metadata will be removed. Metadata headers `name` and `id` are mandatory and will always persist."
					},
					"response": [
						{
							"name": "The operation completed successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									},
									{
										"description": "An arbitrary metadata key/value pair. Must contain the x-amz-meta- prefix to be valid. Multiple metadata pairs can be defined. keys must be unique and will be converted to lowercase.",
										"key": "x-amz-meta-x",
										"value": "a"
									},
									{
										"key": "x-amz-meta-y",
										"value": "",
										"description": "value is not required, but if provided must exist for this key",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object/:objId/metadata?versionId=1647462569641",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId",
										"metadata"
									],
									"query": [
										{
											"key": "versionId",
											"value": "1647462569641"
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Operations directly influencing the Metadata of an S3 Object."
		},
		{
			"name": "Object Tagging",
			"item": [
				{
					"name": "Adds tags to an object",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/object/:objId/tagging?tagset[x]=a&tagset[y]=b&versionId=1647462569641",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object",
								":objId",
								"tagging"
							],
							"query": [
								{
									"key": "tagset[x]",
									"value": "a",
									"description": "Tags for the object, defined as a Key/Value tag. The query must be formatted in deepObject style notation, where a tag-set made out of multiple tags would be encoded something similar to `tagset[x]=a&tagset[y]=b`. Only one value can exist for a given tag key."
								},
								{
									"key": "tagset[y]",
									"value": "b",
									"description": "Tags for the object, defined as a Key/Value tag. The query must be formatted in deepObject style notation, where a tag-set made out of multiple tags would be encoded something similar to `tagset[x]=a&tagset[y]=b`. Only one value can exist for a given tag key."
								},
								{
									"key": "versionId",
									"value": "1647462569641",
									"description": "add tags to a specified version. If not provided, will use latest"
								}
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Adds a specified set of tags to the object. Multiple Key/Value pairs can be provided in the query."
					},
					"response": [
						{
							"name": "The resource was added successfully.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object/:objId/tagging?tagset[x]=a&tagset[y]=b&versionId=1647462569641",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId",
										"tagging"
									],
									"query": [
										{
											"key": "tagset[x]",
											"value": "a"
										},
										{
											"key": "tagset[y]",
											"value": "b"
										},
										{
											"key": "versionId",
											"value": "1647462569641"
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Adds tags to an object Copy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/object/tagging?tagset[a]=1&tagset[a]=3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object",
								"tagging"
							],
							"query": [
								{
									"key": "tagset[a]",
									"value": "1"
								},
								{
									"key": "tagset[a]",
									"value": "3"
								}
							]
						},
						"description": "Adds a specified set of tags to the object. Multiple Key/Value pairs can be provided in the query."
					},
					"response": [
						{
							"name": "The resource was added successfully.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object/:objId/tagging?tagset[x]=a&tagset[y]=b&versionId=1647462569641",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId",
										"tagging"
									],
									"query": [
										{
											"key": "tagset[x]",
											"value": "a"
										},
										{
											"key": "tagset[y]",
											"value": "b"
										},
										{
											"key": "versionId",
											"value": "1647462569641"
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Replaces tags of an object",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/object/:objId/tagging?tagset[x]=a&tagset[y]=b&versionId=1647462569641",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object",
								":objId",
								"tagging"
							],
							"query": [
								{
									"key": "tagset[x]",
									"value": "a",
									"description": "Tags for the object, defined as a Key/Value tag. The query must be formatted in deepObject style notation, where a tag-set made out of multiple tags would be encoded something similar to `tagset[x]=a&tagset[y]=b`. Only one value can exist for a given tag key."
								},
								{
									"key": "tagset[y]",
									"value": "b",
									"description": "Tags for the object, defined as a Key/Value tag. The query must be formatted in deepObject style notation, where a tag-set made out of multiple tags would be encoded something similar to `tagset[x]=a&tagset[y]=b`. Only one value can exist for a given tag key."
								},
								{
									"key": "versionId",
									"value": "1647462569641",
									"description": "Replace tags for a specified version"
								}
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Replace the existing tag-set of an object with the set of given tags. Multiple Key/Value pairs can be provided in the query."
					},
					"response": [
						{
							"name": "The operation completed successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object/:objId/tagging?tagset[x]=a&tagset[y]=b&versionId=1647462569641",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId",
										"tagging"
									],
									"query": [
										{
											"key": "tagset[x]",
											"value": "a"
										},
										{
											"key": "tagset[y]",
											"value": "b"
										},
										{
											"key": "versionId",
											"value": "1647462569641"
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete tags of an object.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/object/:objId/tagging?tagset[x]=a&tagset[y]=b&versionId=1647462569641",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"object",
								":objId",
								"tagging"
							],
							"query": [
								{
									"key": "tagset[x]",
									"value": "a",
									"description": "Tags for the object, defined as a Key/Value tag. The query must be formatted in deepObject style notation, where a tag-set made out of multiple tags would be encoded something similar to `tagset[x]=a&tagset[y]=b`. Only one value can exist for a given tag key."
								},
								{
									"key": "tagset[y]",
									"value": "b",
									"description": "Tags for the object, defined as a Key/Value tag. The query must be formatted in deepObject style notation, where a tag-set made out of multiple tags would be encoded something similar to `tagset[x]=a&tagset[y]=b`. Only one value can exist for a given tag key."
								},
								{
									"key": "versionId",
									"value": "1647462569641",
									"description": "Delete tags from a specified version"
								}
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Removes the specified set of tags from the object. Multiple Key/Value pairs can be provided in the query. All tags in the tag-set will be removed from the object if no tags are specified."
					},
					"response": [
						{
							"name": "The resource was deleted successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/object/:objId/tagging?tagset[x]=a&tagset[y]=b&versionId=1647462569641",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"object",
										":objId",
										"tagging"
									],
									"query": [
										{
											"key": "tagset[x]",
											"value": "a"
										},
										{
											"key": "tagset[y]",
											"value": "b"
										},
										{
											"key": "versionId",
											"value": "1647462569641"
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Operations directly influencing the Tags of an S3 Object."
		},
		{
			"name": "Permission",
			"item": [
				{
					"name": "Search for object permissions",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "<Basic Auth Username>",
									"type": "string"
								},
								{
									"key": "password",
									"value": "<Basic Auth Password>",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/permission?objId=ac246e31-c807-496c-bc93-cd8bc2f1b2b4&userId=00000000-0000-0000-0000-000000000000&permCode=UPDATE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permission"
							],
							"query": [
								{
									"key": "objId",
									"value": "ac246e31-c807-496c-bc93-cd8bc2f1b2b4",
									"description": "Uuid or array of uuids representing the object"
								},
								{
									"key": "userId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "Uuid or array of uuids representing the user"
								},
								{
									"key": "permCode",
									"value": "UPDATE",
									"description": "the permission type"
								}
							]
						},
						"description": "Returns an array of permissions meeting the filtering parameters provided"
					},
					"response": [
						{
							"name": "Returns an array of objectId/userId/permCode triplets that match the provided parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permission?objId=ac246e31-c807-496c-bc93-cd8bc2f1b2b4&userId=00000000-0000-0000-0000-000000000000&permCode=UPDATE",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permission"
									],
									"query": [
										{
											"key": "objId",
											"value": "ac246e31-c807-496c-bc93-cd8bc2f1b2b4"
										},
										{
											"key": "userId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "permCode",
											"value": "UPDATE"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"id\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"objectId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"permCode\": \"UPDATE\",\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"userId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\"\n  },\n  {\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"id\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"objectId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"permCode\": \"UPDATE\",\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"userId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\"\n  }\n]"
						}
					]
				},
				{
					"name": "Returns the object permissions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/permission/:objId?userId=00000000-0000-0000-0000-000000000000&permCode=UPDATE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permission",
								":objId"
							],
							"query": [
								{
									"key": "userId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "Uuid or array of uuids representing the user"
								},
								{
									"key": "permCode",
									"value": "UPDATE",
									"description": "the permission type"
								}
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Returns an array of permissions for a specific object meeting the filtering parameters provided"
					},
					"response": [
						{
							"name": "Returns an array of objectId/userId/permCode triplets that match the provided parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permission/:objId?userId=00000000-0000-0000-0000-000000000000&permCode=UPDATE",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permission",
										":objId"
									],
									"query": [
										{
											"key": "userId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "permCode",
											"value": "UPDATE"
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"id\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"objectId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"permCode\": \"UPDATE\",\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"userId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\"\n  },\n  {\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"id\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"objectId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"permCode\": \"UPDATE\",\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"userId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\"\n  }\n]"
						}
					]
				},
				{
					"name": "Grants object permissions to users",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"permCode\": \"UPDATE\",\n    \"userId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\"\n  },\n  {\n    \"permCode\": \"UPDATE\",\n    \"userId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/permission/:objId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permission",
								":objId"
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Adds permissions for a specific object to users by specifying an arbitrary array of permCode and user tuples. This is an idempotent operation, so users that already have a requested permission will remain unaffected. Only permissions successfully added to COMS will appear in the response."
					},
					"response": [
						{
							"name": "Returns an array of added permissions",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"permCode\": \"UPDATE\",\n    \"userId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\"\n  },\n  {\n    \"permCode\": \"UPDATE\",\n    \"userId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/permission/:objId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permission",
										":objId"
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"id\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"objectId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"permCode\": \"UPDATE\",\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"userId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\"\n  },\n  {\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"id\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"objectId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"permCode\": \"UPDATE\",\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"userId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\"\n  }\n]"
						}
					]
				},
				{
					"name": "Deletes permissions for a user",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/permission/:objId?userId=00000000-0000-0000-0000-000000000000&permCode=UPDATE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"permission",
								":objId"
							],
							"query": [
								{
									"key": "userId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "Uuid or array of uuids representing the user"
								},
								{
									"key": "permCode",
									"value": "UPDATE",
									"description": "the permission type"
								}
							],
							"variable": [
								{
									"key": "objId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "(Required) Uuid of an object"
								}
							]
						},
						"description": "Removes permissions for a specific object by optionally specifying a set of users and subset of permissions to revoke. This is an idempotent operation, so users that already lack the specified permission(s) will remain unaffected. Only permissions successfully removed from COMS will appear in the response. WARNING: Specifying no parameters will delete all permissions associated with an object; it is possible to lock yourself out of your own object!"
					},
					"response": [
						{
							"name": "Returns an array of deleted permissions",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/permission/:objId?userId=00000000-0000-0000-0000-000000000000&permCode=UPDATE",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"permission",
										":objId"
									],
									"query": [
										{
											"key": "userId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "permCode",
											"value": "UPDATE"
										}
									],
									"variable": [
										{
											"key": "objId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Uuid of an object"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"id\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"objectId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"permCode\": \"UPDATE\",\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"userId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\"\n  },\n  {\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"id\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"objectId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\",\n    \"permCode\": \"UPDATE\",\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"userId\": \"ac246e31-c807-496c-bc93-cd8bc2f1b2b4\"\n  }\n]"
						}
					]
				}
			],
			"description": "Operations for managing User Access Control to S3 Objects. Not available without a database."
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Search for users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user?userId=00000000-0000-0000-0000-000000000000&identityId=00000000-0000-0000-0000-000000000000&idp=idir&username=bobsmith&email=bobsmith@gov.bc.ca&firstName=bob&fullName=bob smith&lastName=smith&active=true&search=smith",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "userId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "Uuid or array of uuids representing the user"
								},
								{
									"key": "identityId",
									"value": "00000000-0000-0000-0000-000000000000",
									"description": "Uuid or array of uuids representing the user (identified by optional `KC_IDENTITYKEY` env variable)"
								},
								{
									"key": "idp",
									"value": "idir",
									"description": "Idp or array of idps representing the identity provider(s) (i.e. `idir`, `bceid-basic`, etc)"
								},
								{
									"key": "username",
									"value": "bobsmith",
									"description": "Search by specific username"
								},
								{
									"key": "email",
									"value": "bobsmith@gov.bc.ca",
									"description": "Search by specific email"
								},
								{
									"key": "firstName",
									"value": "bob",
									"description": "Search by specific first name"
								},
								{
									"key": "fullName",
									"value": "bob smith",
									"description": "Search by specific full name"
								},
								{
									"key": "lastName",
									"value": "smith",
									"description": "Search by specific last name"
								},
								{
									"key": "active",
									"value": "true",
									"description": "Boolean on active status"
								},
								{
									"key": "search",
									"value": "smith",
									"description": "General OR search across username, email and fullName. Intended for use in freetext searches or autofilling fields."
								}
							]
						},
						"description": "Returns a list of users based on the provided filtering parameters. At least one query parameter should be present."
					},
					"response": [
						{
							"name": "Returns a JSON object representation of the user matching provided parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user?userId=00000000-0000-0000-0000-000000000000&identityId=00000000-0000-0000-0000-000000000000&idp=idir&username=bobsmith&email=bobsmith@gov.bc.ca&firstName=bob&fullName=bob smith&lastName=smith&active=true&search=smith",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									],
									"query": [
										{
											"key": "userId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "identityId",
											"value": "00000000-0000-0000-0000-000000000000"
										},
										{
											"key": "idp",
											"value": "idir"
										},
										{
											"key": "username",
											"value": "bobsmith"
										},
										{
											"key": "email",
											"value": "bobsmith@gov.bc.ca"
										},
										{
											"key": "firstName",
											"value": "bob"
										},
										{
											"key": "fullName",
											"value": "bob smith"
										},
										{
											"key": "lastName",
											"value": "smith"
										},
										{
											"key": "active",
											"value": "true"
										},
										{
											"key": "search",
											"value": "smith"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"userId\": \"5dad1ec9-d3c0-4b0f-8ead-cb4d9fa98987\",\n    \"identityId\": \"5dad1ec9-d3c0-4b0f-8ead-cb4d9fa98987\",\n    \"idp\": \"idir\",\n    \"email\": \"jsmith@gov.bc.ca\",\n    \"username\": \"jsmith\",\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith\",\n    \"active\": true\n  },\n  {\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"userId\": \"5dad1ec9-d3c0-4b0f-8ead-cb4d9fa98987\",\n    \"identityId\": \"5dad1ec9-d3c0-4b0f-8ead-cb4d9fa98987\",\n    \"idp\": \"idir\",\n    \"email\": \"jsmith@gov.bc.ca\",\n    \"username\": \"jsmith\",\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith\",\n    \"active\": true\n  }\n]"
						}
					]
				},
				{
					"name": "Lists all identity providers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/idpList?active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"idpList"
							],
							"query": [
								{
									"key": "active",
									"value": "true",
									"description": "Boolean on active status"
								}
							]
						},
						"description": "Returns a list of all currently known identity providers"
					},
					"response": [
						{
							"name": "Returns a JSON array of known identity providers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/idpList?active=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"idpList"
									],
									"query": [
										{
											"key": "active",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"active\": true,\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"idp\": \"idir\",\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\"\n  },\n  {\n    \"active\": true,\n    \"createdAt\": \"2022-03-11T23:19:16.343Z\",\n    \"createdBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\",\n    \"idp\": \"idir\",\n    \"updatedAt\": \"2022-03-11T23:19:16.343Z\",\n    \"updatedBy\": \"72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\"\n  }\n]"
						}
					]
				}
			],
			"description": "Operations to list valid queryable users and identity providers. Not available without a database."
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "pass1",
				"type": "string"
			},
			{
				"key": "username",
				"value": "user1",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1/",
			"type": "string"
		}
	]
}
