{
	"info": {
		"_postman_id": "e966f45f-bdbc-462c-9120-e693eb637265",
		"name": "CHES - Common Hosted Email Service",
		"description": "# Common Services - APIs\nThis Postman collection demonstrates the APIs available to you with your Common Services client.  \n\n## Services\nPlease review the API documents before proceeding. The more familiar you are with the API calls, the more useful you will find the examples in this collection.  \n\n### CHES\nThe CHES API is capable of doing the following:\n\n* Send emails with attachments and special business tagging. \n* Schedule for delayed delivery, with ability to cancel. \n* Create bulk email merge with your own templates.  \n* Send plain text or HTML emails. \n* Track the status of your request. \n\nReview the v1 API specification [here](https://ches-master-9f0fbe-prod.pathfinder.gov.bc.ca/api/v1/docs).  \n\nSee Showcase application [here](https://mssc.pathfinder.gov.bc.ca/mssc/).  \n\n## Setup\nYou will need to set the [collection variables](https://learning.postman.com/docs/postman/collections/intro-to-collections/), or run the tests with an [environment](https://learning.postman.com/docs/postman/variables-and-environments/managing-environments/) that configures the following:  \n\n| Name | Description |\n| --- | --- |\n| auth\\_host | Host for authentication service to get client token |\n| ches\\_host | Host for CHES Service |\n| service\\_client\\_id | Set this to *YOUR* client id from GETOK |\n| service\\_client\\_secret | Set this to *YOUR* client secret from GETOK |\n| email\\_to | Set this to *YOUR* email, you will get emails from CHES |\n\n  \n\n### Environments \nBy default, the hosts are set to the DEV environment.\n\n| DEV | URL |\n| --- | --- |\n| auth\\_host | https://sso-dev.pathfinder.gov.bc.ca |\n| ches\\_host | https://ches-master-9f0fbe-dev.pathfinder.gov.bc.ca |\n\n| TEST | URL |\n| --- | --- |\n| auth\\_host | https://sso-test.pathfinder.gov.bc.ca |\n| ches\\_host | https://ches-master-9f0fbe-test.pathfinder.gov.bc.ca |\n\n| PROD | URL |\n| --- | --- |\n| auth\\_host | https://sso-prod.pathfinder.gov.bc.ca |\n| ches\\_host | https://ches-master-9f0fbe-prod.pathfinder.gov.bc.ca |\n\n## Overview\nOnce you have set the host and client id/secret variables, you can begin running the API calls. The order of the calls is very important, as each call will set variables that are used in subsequent calls. In particular, you will always want to run \"Request a Token\" first.  If you encounter any 401 responses, try getting a new token.  \n\nEach of the calls has a test (ensuring an expected response, checking headers, response values, etc.). Feel free to familiarize yourself with [tests and scripts](https://learning.postman.com/docs/postman/scripts/intro-to-scripts/). There is code in some Pre-request Scripts and Tests.  For example, setting the delayTS variable for delayed emails is done in a Pre-request Script. All ids used for getting or deleting a particular resource are done in Test scripts (read value, set a collection variable for next test).  \n\n\n### Run the collection\nUse the [collection runner](https://learning.postman.com/docs/postman/collection-runs/intro-to-collection-runs/) to completely smoke test your credentials and the Common Services environments.\n\n\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9713658"
	},
	"item": [
		{
			"name": "Request a Token",
			"item": [
				{
					"name": "Request a Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.collectionVariables.set('access_token', jsonData.access_token);",
									"    pm.collectionVariables.set('session_tag', jsonData.session_state.substring(0,8));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{service_client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{service_client_id}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth_host}}/auth/realms/comsvcauth/protocol/openid-connect/token",
							"host": [
								"{{auth_host}}"
							],
							"path": [
								"auth",
								"realms",
								"comsvcauth",
								"protocol",
								"openid-connect",
								"token"
							]
						},
						"description": "This request will get an OAuth Access Token that is required for calls to the Common Services API's.\n\nThe reponse from this request (the Access Token) can be attached to the top level 'Common Services' collection and then 'Inherited from parent' by the requests contained inside it."
					},
					"response": []
				}
			]
		},
		{
			"name": "V1",
			"item": [
				{
					"name": "health check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('dependencies');",
									"    pm.expect(jsonData.dependencies).to.have.length(3);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ches_host}}/api/v1/health",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "send email message",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('txId');",
									"    pm.expect(jsonData).to.have.property('messages');",
									"    pm.expect(jsonData.messages).to.have.length(1);",
									"    pm.expect(jsonData.messages[0]).to.have.property('to');",
									"    pm.expect(jsonData.messages[0].to[0]).to.eql(pm.variables.get('email_to'));",
									"    pm.collectionVariables.set('email_msg_id', jsonData.messages[0].msgId);",
									"    pm.collectionVariables.set('email_tx_id', jsonData.txId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bcc\": [],\n  \"bodyType\": \"html\",\n  \"body\": \"<h1>Welcome to Common Services</h1><p>Sent by <a href='https://bcgov.github.io/common-hosted-email-service/'>CHES</a></p>\",\n  \"cc\": [],\n  \"delayTS\": 0,\n  \"encoding\": \"utf-8\",\n  \"from\": \"{{email_to}}\",\n  \"priority\": \"normal\",\n  \"subject\": \"CHES Email Message\",\n  \"to\": [\"{{email_to}}\"],\n  \"tag\": \"email_{{session_tag}}\",\n  \"attachments\": [\n    {\n      \"content\": \"IyBDb21tb24gSG9zdGVkIEVtYWlsIFNlcnZpY2UKTmVlZCB0byBzZW5kIGVtYWlscz8gTmVlZCB0byBzZW5kIGJ1bGsgZW1haWxzPyBOZWVkIHRvIHNlbmQgdGVtcGxhdGVkIG1lc3NhZ2VzIHBvcHVsYXRlZCBmcm9tIGEgZGF0YXNldD8gTmVlZCB0byBzY2hlZHVsZSBkZWxpdmVyeSBvZiBlbWFpbHM/ICAKClRoZSBDSEVTIEFQSSBpcyBjYXBhYmxlIG9mIGRvaW5nIHRoZSBmb2xsb3dpbmc6CgoqIFNlbmQgZW1haWxzIHdpdGggYXR0YWNobWVudHMgYW5kIHNwZWNpYWwgYnVzaW5lc3MgdGFnZ2luZy4gCiogU2NoZWR1bGUgZm9yIGRlbGF5ZWQgZGVsaXZlcnksIHdpdGggYWJpbGl0eSB0byBjYW5jZWwuIAoqIENyZWF0ZSBidWxrIGVtYWlsIG1lcmdlIHdpdGggeW91ciBvd24gdGVtcGxhdGVzLiAgCiogU2VuZCBwbGFpbiB0ZXh0IG9yIEhUTUwgZW1haWxzLiAKKiBUcmFjayB0aGUgc3RhdHVzIG9mIHlvdXIgcmVxdWVzdC4gCgpSZXZpZXcgdGhlIHYxIEFQSSBzcGVjaWZpY2F0aW9uIFtoZXJlXShodHRwczovL2NoZXMtbWFzdGVyLTlmMGZiZS1wcm9kLnBhdGhmaW5kZXIuZ292LmJjLmNhL2FwaS92MS9kb2NzKS4gIAoKU2VlIFNob3djYXNlIGFwcGxpY2F0aW9uIFtoZXJlXShodHRwczovL21zc2MucGF0aGZpbmRlci5nb3YuYmMuY2EvbXNzYy8pLiAgCgpTZWUgc291cmNlIGNvZGUgW2hlcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9iY2dvdi9jb21tb24taG9zdGVkLWVtYWlsLXNlcnZpY2UpLiAgCgpNb3JlIGluZm9ybWF0aW9uIFtoZXJlXShodHRwczovL2JjZ292LmdpdGh1Yi5pby9jb21tb24taG9zdGVkLWVtYWlsLXNlcnZpY2UvKS4gIAoKIyBDb21tb24gRG9jdW1lbnQgR2VuZXJhdGlvbiBTZXJ2aWNlCkxldmVyYWdlIHlvdXIgc3RydWN0dXJlZCBkYXRhc2V0cyBhbmQgeW91ciBidXNpbmVzcyB0ZW1wbGF0ZXMgdG8gYXV0b21hdGljYWxseSBwb3B1bGF0ZSBwcmludGFibGUgZG9jdW1lbnRzLCBzcHJlYWRzaGVldHMsIHByZXNlbnRhdGlvbnMsIG9yIFBERnMgdXNpbmcgdGhlIENvbW1vbiBEb2N1bWVudCBHZW5lcmF0aW9uIFNlcnZpY2UuICAKClRoZSBBUEkgY2FuIGdlbmVyYXRlIGFueSBQREYgb3IgWE1MLWJhc2VkIGRvY3VtZW50cyBzdWNoIGFzIGRvY3gsIHhsc3gsIHBwdHgsIG9kdCwgb2RzLCBvZHAsIGFuZCBodG1sLiBFeGFtcGxlcyBvZiBYTUwtYmFzZWQgZWRpdG9ycyBpbmNsdWRlIE1pY3Jvc29mdCBPZmZpY2XihKIsIExpYnJlT2ZmaWNl4oSiIG9yIE9wZW5PZmZpY2XihKIuCgpUaGUgQ0RPR1MgQVBJIGlzIGNhcGFibGUgb2YgZG9pbmcgdGhlIGZvbGxvd2luZzoKCiogTWVyZ2UgY29tcGxleCBkYXRhc2V0cyBpbnRvIGRvY3VtZW50IHRlbXBsYXRlcy4gCiogU3VwcG9ydHMgYW55IFhNTC1iYXNlZCBkb2N1bWVudCB0ZW1wbGF0ZXMgaW5jbHVkaW5nIGJ1dCBub3QgbGltaXRlZCB0byBNaWNyb3NvZnQgT2ZmaWNl4oSiLCBMaWJyZU9mZmljZeKEoiBvciBPcGVuT2ZmaWNl4oSiLiAKKiBSaWNoIHRlbXBsYXRpbmcgbGlicmFyeSBzdXBwb3J0IGxldmVyYWdpbmcgdGhlIENhcmJvbmUgSlMgbGlicmFyeS4gCgpSZXZpZXcgdGhlIHYxIEFQSSBzcGVjaWZpY2F0aW9uIFtoZXJlXShodHRwczovL2Nkb2dzLW1hc3Rlci1pZGNxdmwtcHJvZC5wYXRoZmluZGVyLmdvdi5iYy5jYS9hcGkvdjEvZG9jcyN0YWcvRG9jR2VuKS4gIAoKUmV2aWV3IHRoZSB2MiBBUEkgc3BlY2lmaWNhdGlvbiBbaGVyZV0oaHR0cHM6Ly9jZG9ncy1tYXN0ZXItaWRjcXZsLXByb2QucGF0aGZpbmRlci5nb3YuYmMuY2EvYXBpL3YyL2RvY3MjdGFnL0RvY0dlbikuICAKClNlZSBTaG93Y2FzZSBhcHBsaWNhdGlvbiBbaGVyZV0oaHR0cHM6Ly9kZ3JzYy5wYXRoZmluZGVyLmdvdi5iYy5jYS9kZ3JzYy8pLiAgCgpTZWUgc291cmNlIGNvZGUgW2hlcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9iY2dvdi9jb21tb24tZG9jdW1lbnQtZ2VuZXJhdGlvbi1zZXJ2aWNlKS4gIAoKTW9yZSBpbmZvcm1hdGlvbiBbaGVyZV0oaHR0cHM6Ly9iY2dvdi5naXRodWIuaW8vY29tbW9uLWRvY3VtZW50LWdlbmVyYXRpb24tc2VydmljZS8pLiAgCgoKIyMjIyBDb21tb24gU2VydmljZXMgU2hvd2Nhc2UKVmlzaXQgW0NvbW1vbiBTZXJ2aWNlcyBTaG93Y2FzZV0oaHR0cHM6Ly9iY2dvdi5naXRodWIuaW8vY29tbW9uLXNlcnZpY2Utc2hvd2Nhc2UvKSBmb3IgbW9yZSBpbmZvcm1hdGlvbjsgaW5jbHVkaW5nIGhvdyB0byBnZXQgYWNjZXNzIHRvIGNvbW1vbiBzZXJ2aWNlcy4gICA=\",\n      \"contentType\": \"text/markdown\",\n      \"encoding\": \"base64\",\n      \"filename\": \"readme.md\"\n    }\n  ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ches_host}}/api/v1/email",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"email"
							],
							"query": [
								{
									"key": "devMode",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get status history of message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('txId');",
									"    pm.expect(jsonData).to.have.property('msgId');",
									"    pm.expect(jsonData).to.have.property('txId',pm.collectionVariables.get('email_tx_id'));",
									"    pm.expect(jsonData).to.have.property('msgId', pm.collectionVariables.get('email_msg_id'));",
									"    pm.expect(jsonData).to.have.property('statusHistory');",
									"    pm.expect(jsonData.statusHistory).to.have.lengthOf.at.least(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ches_host}}/api/v1/status/{{email_msg_id}}",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"status",
								"{{email_msg_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get status by transaction id (txId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"    pm.expect(jsonData[0]).to.have.property('txId',pm.collectionVariables.get('email_tx_id'));",
									"    pm.expect(jsonData[0]).to.have.property('msgId', pm.collectionVariables.get('email_msg_id'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ches_host}}/api/v1/status?txId={{email_tx_id}}",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"status"
							],
							"query": [
								{
									"key": "msgId",
									"value": "7ebbbdad-0671-44aa-91d9-36151308df73",
									"disabled": true
								},
								{
									"key": "status",
									"value": "completed",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "tag",
									"disabled": true
								},
								{
									"key": "txId",
									"value": "{{email_tx_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get status by message id (msgId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"    pm.expect(jsonData[0]).to.have.property('txId',pm.collectionVariables.get('email_tx_id'));",
									"    pm.expect(jsonData[0]).to.have.property('msgId', pm.collectionVariables.get('email_msg_id'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ches_host}}/api/v1/status?msgId={{email_msg_id}}",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"status"
							],
							"query": [
								{
									"key": "msgId",
									"value": "7ebbbdad-0671-44aa-91d9-36151308df73",
									"disabled": true
								},
								{
									"key": "status",
									"value": "completed",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "tag",
									"disabled": true
								},
								{
									"key": "msgId",
									"value": "{{email_msg_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get status by tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    pm.expect(jsonData).to.have.length.of.at.least(1);",
									"    pm.expect(jsonData.some(x => x.txId === pm.collectionVariables.get('email_tx_id')));",
									"    pm.expect(jsonData.some(x => x.msgId === pm.collectionVariables.get('email_msg_id')));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ches_host}}/api/v1/status?tag=email_{{session_tag}}",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"status"
							],
							"query": [
								{
									"key": "msgId",
									"value": "7ebbbdad-0671-44aa-91d9-36151308df73",
									"disabled": true
								},
								{
									"key": "status",
									"value": "completed",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "tag",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "email_{{session_tag}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "send email merge (bulk emails)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var d = new Date();",
									"var delayTS = d.setMinutes(d.getMinutes() + 2);",
									"pm.variables.set('delay_ts', delayTS);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('txId');",
									"    pm.expect(jsonData).to.have.property('messages');",
									"    pm.expect(jsonData.messages).to.have.length(2);",
									"    pm.expect(jsonData.messages.every(x => x.to === pm.variables.get('email_to')));",
									"    pm.collectionVariables.set('merge_msg_id', jsonData.messages[0].msgId);",
									"    pm.collectionVariables.set('merge_tx_id', jsonData.txId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bodyType\": \"text\",\n  \"body\": \"Hello from CHES. The following is filled in by during the merge: {{ hello }}\",\n  \"contexts\": [\n    {\n      \"to\": [\"{{email_to}}\"],\n      \"context\": {\n        \"orange\": {\n          \"target\": \"delay\"\n        },\n        \"hello\": \"This message was sent with a 2 minute delay.\"\n      },\n      \"delayTS\": {{delay_ts}},\n      \"tag\": \"merge_{{session_tag}}\"\n    },\n    {\n      \"to\": [\"{{email_to}}\"],\n      \"context\": {\n        \"orange\": {\n          \"target\": \"immediate\"\n        },\n        \"hello\": \"This message was sent immediately.\"\n      },\n      \"delayTS\": 0,\n      \"tag\": \"merge_{{session_tag}}\"\n    }\n  ],\n  \"encoding\": \"utf-8\",\n  \"from\": \"{{email_to}}\",\n  \"priority\": \"normal\",\n  \"subject\": \"CHES Email Merge {{ orange.target }}\",\n  \"attachments\": [\n    {\n      \"content\": \"IyBDb21tb24gSG9zdGVkIEVtYWlsIFNlcnZpY2UKTmVlZCB0byBzZW5kIGVtYWlscz8gTmVlZCB0byBzZW5kIGJ1bGsgZW1haWxzPyBOZWVkIHRvIHNlbmQgdGVtcGxhdGVkIG1lc3NhZ2VzIHBvcHVsYXRlZCBmcm9tIGEgZGF0YXNldD8gTmVlZCB0byBzY2hlZHVsZSBkZWxpdmVyeSBvZiBlbWFpbHM/ICAKClRoZSBDSEVTIEFQSSBpcyBjYXBhYmxlIG9mIGRvaW5nIHRoZSBmb2xsb3dpbmc6CgoqIFNlbmQgZW1haWxzIHdpdGggYXR0YWNobWVudHMgYW5kIHNwZWNpYWwgYnVzaW5lc3MgdGFnZ2luZy4gCiogU2NoZWR1bGUgZm9yIGRlbGF5ZWQgZGVsaXZlcnksIHdpdGggYWJpbGl0eSB0byBjYW5jZWwuIAoqIENyZWF0ZSBidWxrIGVtYWlsIG1lcmdlIHdpdGggeW91ciBvd24gdGVtcGxhdGVzLiAgCiogU2VuZCBwbGFpbiB0ZXh0IG9yIEhUTUwgZW1haWxzLiAKKiBUcmFjayB0aGUgc3RhdHVzIG9mIHlvdXIgcmVxdWVzdC4gCgpSZXZpZXcgdGhlIHYxIEFQSSBzcGVjaWZpY2F0aW9uIFtoZXJlXShodHRwczovL2NoZXMtbWFzdGVyLTlmMGZiZS1wcm9kLnBhdGhmaW5kZXIuZ292LmJjLmNhL2FwaS92MS9kb2NzKS4gIAoKU2VlIFNob3djYXNlIGFwcGxpY2F0aW9uIFtoZXJlXShodHRwczovL21zc2MucGF0aGZpbmRlci5nb3YuYmMuY2EvbXNzYy8pLiAgCgpTZWUgc291cmNlIGNvZGUgW2hlcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9iY2dvdi9jb21tb24taG9zdGVkLWVtYWlsLXNlcnZpY2UpLiAgCgpNb3JlIGluZm9ybWF0aW9uIFtoZXJlXShodHRwczovL2JjZ292LmdpdGh1Yi5pby9jb21tb24taG9zdGVkLWVtYWlsLXNlcnZpY2UvKS4gIAoKIyBDb21tb24gRG9jdW1lbnQgR2VuZXJhdGlvbiBTZXJ2aWNlCkxldmVyYWdlIHlvdXIgc3RydWN0dXJlZCBkYXRhc2V0cyBhbmQgeW91ciBidXNpbmVzcyB0ZW1wbGF0ZXMgdG8gYXV0b21hdGljYWxseSBwb3B1bGF0ZSBwcmludGFibGUgZG9jdW1lbnRzLCBzcHJlYWRzaGVldHMsIHByZXNlbnRhdGlvbnMsIG9yIFBERnMgdXNpbmcgdGhlIENvbW1vbiBEb2N1bWVudCBHZW5lcmF0aW9uIFNlcnZpY2UuICAKClRoZSBBUEkgY2FuIGdlbmVyYXRlIGFueSBQREYgb3IgWE1MLWJhc2VkIGRvY3VtZW50cyBzdWNoIGFzIGRvY3gsIHhsc3gsIHBwdHgsIG9kdCwgb2RzLCBvZHAsIGFuZCBodG1sLiBFeGFtcGxlcyBvZiBYTUwtYmFzZWQgZWRpdG9ycyBpbmNsdWRlIE1pY3Jvc29mdCBPZmZpY2XihKIsIExpYnJlT2ZmaWNl4oSiIG9yIE9wZW5PZmZpY2XihKIuCgpUaGUgQ0RPR1MgQVBJIGlzIGNhcGFibGUgb2YgZG9pbmcgdGhlIGZvbGxvd2luZzoKCiogTWVyZ2UgY29tcGxleCBkYXRhc2V0cyBpbnRvIGRvY3VtZW50IHRlbXBsYXRlcy4gCiogU3VwcG9ydHMgYW55IFhNTC1iYXNlZCBkb2N1bWVudCB0ZW1wbGF0ZXMgaW5jbHVkaW5nIGJ1dCBub3QgbGltaXRlZCB0byBNaWNyb3NvZnQgT2ZmaWNl4oSiLCBMaWJyZU9mZmljZeKEoiBvciBPcGVuT2ZmaWNl4oSiLiAKKiBSaWNoIHRlbXBsYXRpbmcgbGlicmFyeSBzdXBwb3J0IGxldmVyYWdpbmcgdGhlIENhcmJvbmUgSlMgbGlicmFyeS4gCgpSZXZpZXcgdGhlIHYxIEFQSSBzcGVjaWZpY2F0aW9uIFtoZXJlXShodHRwczovL2Nkb2dzLW1hc3Rlci1pZGNxdmwtcHJvZC5wYXRoZmluZGVyLmdvdi5iYy5jYS9hcGkvdjEvZG9jcyN0YWcvRG9jR2VuKS4gIAoKUmV2aWV3IHRoZSB2MiBBUEkgc3BlY2lmaWNhdGlvbiBbaGVyZV0oaHR0cHM6Ly9jZG9ncy1tYXN0ZXItaWRjcXZsLXByb2QucGF0aGZpbmRlci5nb3YuYmMuY2EvYXBpL3YyL2RvY3MjdGFnL0RvY0dlbikuICAKClNlZSBTaG93Y2FzZSBhcHBsaWNhdGlvbiBbaGVyZV0oaHR0cHM6Ly9kZ3JzYy5wYXRoZmluZGVyLmdvdi5iYy5jYS9kZ3JzYy8pLiAgCgpTZWUgc291cmNlIGNvZGUgW2hlcmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9iY2dvdi9jb21tb24tZG9jdW1lbnQtZ2VuZXJhdGlvbi1zZXJ2aWNlKS4gIAoKTW9yZSBpbmZvcm1hdGlvbiBbaGVyZV0oaHR0cHM6Ly9iY2dvdi5naXRodWIuaW8vY29tbW9uLWRvY3VtZW50LWdlbmVyYXRpb24tc2VydmljZS8pLiAgCgoKIyMjIyBDb21tb24gU2VydmljZXMgU2hvd2Nhc2UKVmlzaXQgW0NvbW1vbiBTZXJ2aWNlcyBTaG93Y2FzZV0oaHR0cHM6Ly9iY2dvdi5naXRodWIuaW8vY29tbW9uLXNlcnZpY2Utc2hvd2Nhc2UvKSBmb3IgbW9yZSBpbmZvcm1hdGlvbjsgaW5jbHVkaW5nIGhvdyB0byBnZXQgYWNjZXNzIHRvIGNvbW1vbiBzZXJ2aWNlcy4gICA=\",\n      \"contentType\": \"text/markdown\",\n      \"encoding\": \"base64\",\n      \"filename\": \"readme.md\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{ches_host}}/api/v1/emailMerge",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"emailMerge"
							],
							"query": [
								{
									"key": "devMode",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get status of merge messages with txId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    pm.expect(jsonData).to.have.lengthOf(2);",
									"    pm.expect(jsonData.every(x => x.txId === pm.collectionVariables.get('merge_tx_id')));",
									"    pm.expect(jsonData.some(x => x.msgId === pm.collectionVariables.get('merge_msg_id')));",
									"    pm.expect(jsonData.some(x => x.status === 'pending'));",
									"    pm.collectionVariables.set('pending_msg_id', jsonData.find(x => x.status === 'pending').msgId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ches_host}}/api/v1/status?txId={{merge_tx_id}}",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"status"
							],
							"query": [
								{
									"key": "msgId",
									"value": "7ebbbdad-0671-44aa-91d9-36151308df73",
									"disabled": true
								},
								{
									"key": "status",
									"value": "completed",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "tag",
									"disabled": true
								},
								{
									"key": "txId",
									"value": "{{merge_tx_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "send email message with delay",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var d = new Date();",
									"var delayTS = d.setMinutes(d.getMinutes() + 5);",
									"pm.variables.set('delay_ts', delayTS);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('txId');",
									"    pm.expect(jsonData).to.have.property('messages');",
									"    pm.expect(jsonData.messages).to.have.length(1);",
									"    pm.expect(jsonData.messages[0]).to.have.property('to');",
									"    pm.expect(jsonData.messages[0].to[0]).to.eql(pm.variables.get('email_to'));",
									"    pm.collectionVariables.set('delay_msg_id', jsonData.messages[0].msgId);",
									"    pm.collectionVariables.set('delay_tx_id', jsonData.txId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bcc\": [],\n  \"bodyType\": \"html\",\n  \"body\": \"<h1>Welcome to Common Services</h1><p>Delayed message sent by <a href='https://bcgov.github.io/common-hosted-email-service/'>CHES</a></p>\",\n  \"cc\": [],\n  \"delayTS\": {{delay_ts}},\n  \"encoding\": \"utf-8\",\n  \"from\": \"{{email_to}}\",\n  \"priority\": \"normal\",\n  \"subject\": \"CHES Email Message (Delayed)\",\n  \"to\": [\"{{email_to}}\"],\n  \"tag\": \"delayed_{{session_tag}}\",\n  \"attachments\": []\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ches_host}}/api/v1/email",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"email"
							],
							"query": [
								{
									"key": "devMode",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "promote",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var d = new Date();",
									"var delayTS = d.setMinutes(d.getMinutes() + 5);",
									"pm.variables.set('delay_ts', delayTS);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('txId');",
									"    pm.expect(jsonData).to.have.property('messages');",
									"    pm.expect(jsonData.messages).to.have.length(1);",
									"    pm.expect(jsonData.messages[0]).to.have.property('to');",
									"    pm.expect(jsonData.messages[0].to[0]).to.eql(pm.variables.get('email_to'));",
									"    pm.collectionVariables.set('delay_msg_id', jsonData.messages[0].msgId);",
									"    pm.collectionVariables.set('delay_tx_id', jsonData.txId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bcc\": [],\n  \"bodyType\": \"html\",\n  \"body\": \"<h1>Welcome to Common Services</h1><p>Delayed message sent by <a href='https://bcgov.github.io/common-hosted-email-service/'>CHES</a></p>\",\n  \"cc\": [],\n  \"delayTS\": {{delay_ts}},\n  \"encoding\": \"utf-8\",\n  \"from\": \"{{email_to}}\",\n  \"priority\": \"normal\",\n  \"subject\": \"CHES Email Message (Delayed)\",\n  \"to\": [\"{{email_to}}\"],\n  \"tag\": \"delayed_{{session_tag}}\",\n  \"attachments\": []\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ches_host}}/api/v1/email",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"email"
							],
							"query": [
								{
									"key": "devMode",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "cancel delayed message by txId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(202);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ches_host}}/app/api/v1/ches/cancel?txId={{delay_tx_id}}",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"app",
								"api",
								"v1",
								"ches",
								"cancel"
							],
							"query": [
								{
									"key": "msgId",
									"value": "dd42b60e-d420-4fdb-95fa-e31dd78479eb",
									"disabled": true
								},
								{
									"key": "status",
									"value": "completed",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "tag",
									"disabled": true
								},
								{
									"key": "txId",
									"value": "{{delay_tx_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get status of cancelled message by txId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"    pm.expect(jsonData[0].txId === pm.collectionVariables.get('delay_tx_id'));",
									"    pm.expect(jsonData[0].msgId === pm.collectionVariables.get('delay_msg_id'));",
									"    pm.expect(jsonData[0].status === 'cancelled');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ches_host}}/api/v1/status?txId={{delay_tx_id}}",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"status"
							],
							"query": [
								{
									"key": "msgId",
									"value": "7ebbbdad-0671-44aa-91d9-36151308df73",
									"disabled": true
								},
								{
									"key": "status",
									"value": "completed",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "tag",
									"disabled": true
								},
								{
									"key": "txId",
									"value": "{{delay_tx_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "send email message with delay (#2)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var d = new Date();",
									"var delayTS = d.setMinutes(d.getMinutes() + 5);",
									"pm.variables.set('delay_ts', delayTS);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('txId');",
									"    pm.expect(jsonData).to.have.property('messages');",
									"    pm.expect(jsonData.messages).to.have.length(1);",
									"    pm.expect(jsonData.messages[0]).to.have.property('to');",
									"    pm.expect(jsonData.messages[0].to[0]).to.eql(pm.variables.get('email_to'));",
									"    pm.collectionVariables.set('delay_2_msg_id', jsonData.messages[0].msgId);",
									"    pm.collectionVariables.set('delay_2_tx_id', jsonData.txId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bcc\": [],\n  \"bodyType\": \"html\",\n  \"body\": \"<h1>Welcome to Common Services</h1><p>Delayed message sent by <a href='https://bcgov.github.io/common-hosted-email-service/'>CHES</a></p>\",\n  \"cc\": [],\n  \"delayTS\": {{delay_ts}},\n  \"encoding\": \"utf-8\",\n  \"from\": \"{{email_to}}\",\n  \"priority\": \"normal\",\n  \"subject\": \"CHES Email Message (Delayed)\",\n  \"to\": [\"{{email_to}}\"],\n  \"tag\": \"delayed_2_{{session_tag}}\",\n  \"attachments\": []\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ches_host}}/api/v1/email",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"email"
							],
							"query": [
								{
									"key": "devMode",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "cancel delayed message by tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(202);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ches_host}}/api/v1/cancel?tag=delayed_2_{{session_tag}}",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"cancel"
							],
							"query": [
								{
									"key": "msgId",
									"value": "dd42b60e-d420-4fdb-95fa-e31dd78479eb",
									"disabled": true
								},
								{
									"key": "status",
									"value": "completed",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "tag",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "delayed_2_{{session_tag}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get status of cancelled message by tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    pm.expect(jsonData).to.have.lengthOf(1);",
									"    pm.expect(jsonData[0].txId === pm.collectionVariables.get('delay_2_tx_id'));",
									"    pm.expect(jsonData[0].msgId === pm.collectionVariables.get('delay_2_msg_id'));",
									"    pm.expect(jsonData[0].status === 'cancelled');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ches_host}}/api/v1/status?tag=delayed_2_{{session_tag}}",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"status"
							],
							"query": [
								{
									"key": "msgId",
									"value": "7ebbbdad-0671-44aa-91d9-36151308df73",
									"disabled": true
								},
								{
									"key": "status",
									"value": "completed",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "tag",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "delayed_2_{{session_tag}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "send email message with delay (#3)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var d = new Date();",
									"var delayTS = d.setMinutes(d.getMinutes() + 5);",
									"pm.variables.set('delay_ts', delayTS);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('txId');",
									"    pm.expect(jsonData).to.have.property('messages');",
									"    pm.expect(jsonData.messages).to.have.length(1);",
									"    pm.expect(jsonData.messages[0]).to.have.property('to');",
									"    pm.expect(jsonData.messages[0].to[0]).to.eql(pm.variables.get('email_to'));",
									"    pm.collectionVariables.set('delay_3_msg_id', jsonData.messages[0].msgId);",
									"    pm.collectionVariables.set('delay_3_tx_id', jsonData.txId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bcc\": [],\n  \"bodyType\": \"html\",\n  \"body\": \"<h1>Welcome to Common Services</h1><p>Delayed message sent by <a href='https://bcgov.github.io/common-hosted-email-service/'>CHES</a></p>\",\n  \"cc\": [],\n  \"delayTS\": {{delay_ts}},\n  \"encoding\": \"utf-8\",\n  \"from\": \"{{email_to}}\",\n  \"priority\": \"normal\",\n  \"subject\": \"CHES Email Message (Delayed)\",\n  \"to\": [\"{{email_to}}\"],\n  \"tag\": \"delayed_3_{{session_tag}}\",\n  \"attachments\": []\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ches_host}}/api/v1/email",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"email"
							],
							"query": [
								{
									"key": "devMode",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get status of delayed message (#3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.txId === pm.collectionVariables.get('delay_3_tx_id'));",
									"    pm.expect(jsonData.msgId === pm.collectionVariables.get('delay_3_msg_id'));",
									"    pm.expect(jsonData.status === 'pending');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ches_host}}/api/v1/status/{{delay_3_msg_id}}",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"status",
								"{{delay_3_msg_id}}"
							],
							"query": [
								{
									"key": "msgId",
									"value": "7ebbbdad-0671-44aa-91d9-36151308df73",
									"disabled": true
								},
								{
									"key": "status",
									"value": "completed",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "tag",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "cancel delayed message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(202);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ches_host}}/api/v1/cancel/{{delay_3_msg_id}}",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"cancel",
								"{{delay_3_msg_id}}"
							],
							"query": [
								{
									"key": "msgId",
									"value": "dd42b60e-d420-4fdb-95fa-e31dd78479eb",
									"disabled": true
								},
								{
									"key": "status",
									"value": "completed",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "tag",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get status of cancelled message (#3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.txId === pm.collectionVariables.get('delay_3_tx_id'));",
									"    pm.expect(jsonData.msgId === pm.collectionVariables.get('delay_3_msg_id'));",
									"    pm.expect(jsonData.status === 'cancelled');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ches_host}}/api/v1/status/{{delay_3_msg_id}}",
							"host": [
								"{{ches_host}}"
							],
							"path": [
								"api",
								"v1",
								"status",
								"{{delay_3_msg_id}}"
							],
							"query": [
								{
									"key": "msgId",
									"value": "7ebbbdad-0671-44aa-91d9-36151308df73",
									"disabled": true
								},
								{
									"key": "status",
									"value": "completed",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "tag",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "{{access_token}}",
				"type": "string"
			},
			{
				"key": "tokenType",
				"value": "bearer",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "access_token",
			"value": "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI5Rm5UcVlVRkxnbTFIbTJIOThnWEJhWnpPcXBnMFlWU1NvNHBESlVuNXZ3In0.eyJleHAiOjE2MTY3MTI1MjEsImlhdCI6MTYxNjcxMjIyMSwianRpIjoiNjFjMzJhODgtNDcwNi00MDA3LTk0NmItZDM0YzdkMGU1MDRlIiwiaXNzIjoiaHR0cHM6Ly9kZXYub2lkYy5nb3YuYmMuY2EvYXV0aC9yZWFsbXMvamJkNnJueHciLCJhdWQiOlsiQ0xPR1MiLCJDRE9HUyIsIkNIRVMiXSwic3ViIjoiZWNkNzZmNjctOTc1Zi00OTQ5LWI5MzItZTI0NzYyNWI2ZmJlIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiTVNTQ19TRVJWSUNFX0NMSUVOVCIsImFjciI6IjEiLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7IkNMT0dTIjp7InJvbGVzIjpbIkxPR0dFUiJdfSwiTVNTQ19TRVJWSUNFX0NMSUVOVCI6eyJyb2xlcyI6WyJDT01NT05fU0VSVklDRVMiXX0sIkNET0dTIjp7InJvbGVzIjpbIkdFTkVSQVRPUiJdfSwiQ0hFUyI6eyJyb2xlcyI6WyJFTUFJTEVSIl19fSwic2NvcGUiOiIiLCJjbGllbnRIb3N0IjoiMTczLjE4MS40OS4xODIiLCJjbGllbnRJZCI6Ik1TU0NfU0VSVklDRV9DTElFTlQiLCJjbGllbnRBZGRyZXNzIjoiMTczLjE4MS40OS4xODIifQ.DgLJFdXYIe3mrcN45JX70_cdqIrof58_P_onZWDap2xEsq6Q7k8oK53_txm7vHIoBlO176gAVe-i_cBufd5Mp9k0szLE_5RSC62yIMQaDlESwBZnVrJTqY08h8vUFfyMn8he51rOkdhaK8vSEYySNyMhQfcpdvGR9c_hCbs2zUFuaUd8Z6wav0G5WzwBOE0m2beHY1J4k-3ByfalH7WQJe08A9v6y9bXHaE4lEucFDRZddi4xQlc1oNBAn9wCq_REIg3jQeAjTVdTqgQZSahtDJ7lgzH1A--tVjtA6iXOrewLq8zWbUUEJ_HBhfudSGWi0lwWfCDSeIC9qgwd4xqlA"
		},
		{
			"key": "session_tag",
			"value": "0b7565ca"
		},
		{
			"key": "auth_host",
			"value": "https://dev.loginproxy.gov.bc.ca"
		},
		{
			"key": "ches_host",
			"value": "https://ches-dev.api.gov.bc.ca"
		},
		{
			"key": "service_client_id",
			"value": "CDACC9DF-012B285B6DB"
		},
		{
			"key": "service_client_secret",
			"value": "<Paste the service client secret here>"
		},
		{
			"key": "email_to",
			"value": "<Paste your email address here>"
		},
		{
			"key": "email_msg_id",
			"value": "1b991c4b-3d1d-48a4-adac-7b3aac398f63"
		},
		{
			"key": "email_tx_id",
			"value": "7d7ce6cc-8d92-4357-9e94-397159721319"
		},
		{
			"key": "delay_msg_id",
			"value": "5ac74f52-386c-443c-bdd0-5c3fa270a690"
		},
		{
			"key": "delay_tx_id",
			"value": "77b3cc86-708f-4853-a1c9-a60253b27e04"
		},
		{
			"key": "merge_msg_id",
			"value": "9acd9e38-883b-4ae7-a2cb-9b1e4fc5cc0c"
		},
		{
			"key": "merge_tx_id",
			"value": "b2486906-574e-4161-9291-116e25e1a3d3"
		},
		{
			"key": "pending_msg_id",
			"value": ""
		},
		{
			"key": "delay_2_msg_id",
			"value": ""
		},
		{
			"key": "delay_2_tx_id",
			"value": ""
		},
		{
			"key": "delay_3_msg_id",
			"value": ""
		},
		{
			"key": "delay_3_tx_id",
			"value": ""
		}
	]
}